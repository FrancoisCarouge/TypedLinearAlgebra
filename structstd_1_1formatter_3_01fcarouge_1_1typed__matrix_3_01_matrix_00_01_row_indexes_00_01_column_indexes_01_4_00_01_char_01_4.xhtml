<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Typed Linear Algebra: std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Typed Linear Algebra<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Typed Linear Algebra</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_99baf915e926a8d8fe7aed74646d178f.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Specialization of the standard formatter for the typed matrix.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="format_8hpp_source.xhtml">format.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_87de27cf264c518db1aac8323d8a4dae.svg" width="192" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a899134801f37e61bc8021dde81611963" id="r_a899134801f37e61bc8021dde81611963"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a899134801f37e61bc8021dde81611963">parse</a> (std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</td></tr>
<tr class="separator:a899134801f37e61bc8021dde81611963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b7d7cda2581a261697330c9d2c113d" id="r_a14b7d7cda2581a261697330c9d2c113d"><td class="memTemplParams" colspan="2">template&lt;typename FormatContext &gt; </td></tr>
<tr class="memitem:a14b7d7cda2581a261697330c9d2c113d"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a14b7d7cda2581a261697330c9d2c113d">format</a> (const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, FormatContext &amp;format_context) const -&gt; FormatContext::iterator</td></tr>
<tr class="separator:a14b7d7cda2581a261697330c9d2c113d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a529a15476568a03a86602714e810f39f" id="r_a529a15476568a03a86602714e810f39f"><td class="memTemplParams" colspan="2">template&lt;typename FormatContext &gt; <br />
requires fcarouge::typed_linear_algebra_internal::row&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:a529a15476568a03a86602714e810f39f"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a529a15476568a03a86602714e810f39f">format</a> (const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, FormatContext &amp;format_context) const -&gt; FormatContext::iterator</td></tr>
<tr class="separator:a529a15476568a03a86602714e810f39f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3faab406e6b5dbd12da4d8891116fa2" id="r_ac3faab406e6b5dbd12da4d8891116fa2"><td class="memTemplParams" colspan="2">template&lt;typename FormatContext &gt; <br />
requires fcarouge::typed_linear_algebra_internal::singleton&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:ac3faab406e6b5dbd12da4d8891116fa2"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ac3faab406e6b5dbd12da4d8891116fa2">format</a> (const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, FormatContext &amp;format_context) const -&gt; FormatContext::iterator</td></tr>
<tr class="separator:ac3faab406e6b5dbd12da4d8891116fa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Matrix, typename RowIndexes, typename ColumnIndexes, typename Char&gt;<br />
struct std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;</div><p>Specialization of the standard formatter for the typed matrix. </p>

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00046">46</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a14b7d7cda2581a261697330c9d2c113d" name="a14b7d7cda2581a261697330c9d2c113d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14b7d7cda2581a261697330c9d2c113d">&#9670;&#160;</a></span>format() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename FormatContext &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FormatContext &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; FormatContext::iterator </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   55</span>                                                                       {</div>
<div class="line"><span class="lineno">   56</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">   57</span> </div>
<div class="line"><span class="lineno">   58</span>    <a class="code hl_function" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#a9a86c642ba2610ed4f92a3d84baf5b00">fcarouge::typed_linear_algebra_internal::for_constexpr</a>&lt;</div>
<div class="line"><span class="lineno">   59</span>        0, <a class="code hl_variable" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#aef655fff0379b424e1493f0e13f75682">fcarouge::typed_linear_algebra_internal::size&lt;RowIndexes&gt;</a>,</div>
<div class="line"><span class="lineno">   60</span>        1&gt;([&amp;value, &amp;format_context](<span class="keyword">auto</span> i) {</div>
<div class="line"><span class="lineno">   61</span>      <span class="keywordflow">if</span> (i &gt; 0) {</div>
<div class="line"><span class="lineno">   62</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">   63</span>      }</div>
<div class="line"><span class="lineno">   64</span> </div>
<div class="line"><span class="lineno">   65</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">   66</span> </div>
<div class="line"><span class="lineno">   67</span>      <a class="code hl_function" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#a9a86c642ba2610ed4f92a3d84baf5b00">fcarouge::typed_linear_algebra_internal::for_constexpr</a>&lt;</div>
<div class="line"><span class="lineno">   68</span>          0, <a class="code hl_variable" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#aef655fff0379b424e1493f0e13f75682">fcarouge::typed_linear_algebra_internal::size&lt;ColumnIndexes&gt;</a>, 1&gt;(</div>
<div class="line"><span class="lineno">   69</span>          [&amp;value, &amp;format_context, &amp;i](<span class="keyword">auto</span> j) {</div>
<div class="line"><span class="lineno">   70</span>            <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><span class="lineno">   71</span>              format_context.advance_to(</div>
<div class="line"><span class="lineno">   72</span>                  std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">   73</span>            }</div>
<div class="line"><span class="lineno">   74</span> </div>
<div class="line"><span class="lineno">   75</span>            format_context.advance_to(std::format_to(</div>
<div class="line"><span class="lineno">   76</span>                format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.template at&lt;i, j&gt;()));</div>
<div class="line"><span class="lineno">   77</span>          });</div>
<div class="line"><span class="lineno">   78</span> </div>
<div class="line"><span class="lineno">   79</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">   80</span>    });</div>
<div class="line"><span class="lineno">   81</span> </div>
<div class="line"><span class="lineno">   82</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">   83</span> </div>
<div class="line"><span class="lineno">   84</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">   85</span>  }</div>
<div class="ttc" id="anamespacefcarouge_1_1typed__linear__algebra__internal_xhtml_a9a86c642ba2610ed4f92a3d84baf5b00"><div class="ttname"><a href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#a9a86c642ba2610ed4f92a3d84baf5b00">fcarouge::typed_linear_algebra_internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00165">utility.hpp:165</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1typed__linear__algebra__internal_xhtml_aef655fff0379b424e1493f0e13f75682"><div class="ttname"><a href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#aef655fff0379b424e1493f0e13f75682">fcarouge::typed_linear_algebra_internal::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00192">utility.hpp:192</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utility_8hpp_source.xhtml#l00165">fcarouge::typed_linear_algebra_internal::for_constexpr()</a>, and <a class="el" href="utility_8hpp_source.xhtml#l00192">fcarouge::typed_linear_algebra_internal::size</a>.</p>
<div id="dynsection-1" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4_a14b7d7cda2581a261697330c9d2c113d_cgraph.svg" width="396" height="98"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a529a15476568a03a86602714e810f39f" name="a529a15476568a03a86602714e810f39f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a529a15476568a03a86602714e810f39f">&#9670;&#160;</a></span>format() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename FormatContext &gt; <br />
requires fcarouge::typed_linear_algebra_internal::row&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FormatContext &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; FormatContext::iterator
    </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00089">89</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   93</span>  {</div>
<div class="line"><span class="lineno">   94</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">   95</span> </div>
<div class="line"><span class="lineno">   96</span>    <a class="code hl_function" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#a9a86c642ba2610ed4f92a3d84baf5b00">fcarouge::typed_linear_algebra_internal::for_constexpr</a>&lt;</div>
<div class="line"><span class="lineno">   97</span>        0, <a class="code hl_variable" href="namespacefcarouge_1_1typed__linear__algebra__internal.xhtml#aef655fff0379b424e1493f0e13f75682">fcarouge::typed_linear_algebra_internal::size&lt;ColumnIndexes&gt;</a>, 1&gt;(</div>
<div class="line"><span class="lineno">   98</span>        [&amp;value, &amp;format_context](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">   99</span>          <span class="keywordflow">if</span> (position &gt; 0) {</div>
<div class="line"><span class="lineno">  100</span>            format_context.advance_to(</div>
<div class="line"><span class="lineno">  101</span>                std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">  102</span>          }</div>
<div class="line"><span class="lineno">  103</span> </div>
<div class="line"><span class="lineno">  104</span>          format_context.advance_to(std::format_to(</div>
<div class="line"><span class="lineno">  105</span>              format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.template at&lt;0, position&gt;()));</div>
<div class="line"><span class="lineno">  106</span>        });</div>
<div class="line"><span class="lineno">  107</span> </div>
<div class="line"><span class="lineno">  108</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">  109</span> </div>
<div class="line"><span class="lineno">  110</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  111</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utility_8hpp_source.xhtml#l00165">fcarouge::typed_linear_algebra_internal::for_constexpr()</a>, and <a class="el" href="utility_8hpp_source.xhtml#l00192">fcarouge::typed_linear_algebra_internal::size</a>.</p>
<div id="dynsection-2" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4_a529a15476568a03a86602714e810f39f_cgraph.svg" width="396" height="98"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ac3faab406e6b5dbd12da4d8891116fa2" name="ac3faab406e6b5dbd12da4d8891116fa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3faab406e6b5dbd12da4d8891116fa2">&#9670;&#160;</a></span>format() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename FormatContext &gt; <br />
requires fcarouge::typed_linear_algebra_internal::singleton&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FormatContext &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; FormatContext::iterator
    </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  119</span>  {</div>
<div class="line"><span class="lineno">  120</span>    format_context.advance_to(</div>
<div class="line"><span class="lineno">  121</span>        std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.template at&lt;0&gt;()));</div>
<div class="line"><span class="lineno">  122</span> </div>
<div class="line"><span class="lineno">  123</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  124</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a899134801f37e61bc8021dde81611963" name="a899134801f37e61bc8021dde81611963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a899134801f37e61bc8021dde81611963">&#9670;&#160;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="classfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::parse </td>
          <td>(</td>
          <td class="paramtype">std::basic_format_parse_context&lt; Char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>parse_context</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   48</span>                                                                           {</div>
<div class="line"><span class="lineno">   49</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><span class="lineno">   50</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/include/fcarouge/typed_linear_algebra_internal/<a class="el" href="format_8hpp_source.xhtml">format.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>std</b></li><li class="navelem"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4.xhtml">formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
