<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Typed Linear Algebra: std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Typed Linear Algebra<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Typed Linear Algebra</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_99baf915e926a8d8fe7aed74646d178f.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Specialization of the standard formatter for the typed matrix.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_87de27cf264c518db1aac8323d8a4dae.svg" width="192" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a899134801f37e61bc8021dde81611963" id="r_a899134801f37e61bc8021dde81611963"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a899134801f37e61bc8021dde81611963">parse</a> (std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</td></tr>
<tr class="separator:a899134801f37e61bc8021dde81611963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60373a22952f78108372e0bdc6d6d29" id="r_ad60373a22952f78108372e0bdc6d6d29"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; </td></tr>
<tr class="memitem:ad60373a22952f78108372e0bdc6d6d29"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ad60373a22952f78108372e0bdc6d6d29">format</a> (const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</td></tr>
<tr class="separator:ad60373a22952f78108372e0bdc6d6d29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7579a19d01fe8fb08fde89bfb36b3b74" id="r_a7579a19d01fe8fb08fde89bfb36b3b74"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; <br />
requires fcarouge::tla::row&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:a7579a19d01fe8fb08fde89bfb36b3b74"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a7579a19d01fe8fb08fde89bfb36b3b74">format</a> (const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</td></tr>
<tr class="separator:a7579a19d01fe8fb08fde89bfb36b3b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adea9782ebc9bcc7fc8498aa1b5d7aa37" id="r_adea9782ebc9bcc7fc8498aa1b5d7aa37"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; <br />
requires fcarouge::tla::singleton&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:adea9782ebc9bcc7fc8498aa1b5d7aa37"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#adea9782ebc9bcc7fc8498aa1b5d7aa37">format</a> (const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</td></tr>
<tr class="separator:adea9782ebc9bcc7fc8498aa1b5d7aa37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Matrix, typename RowIndexes, typename ColumnIndexes, typename Char&gt;<br />
struct std::formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;</div><p>Specialization of the standard formatter for the typed matrix. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo</a></b></dt><dd>Move the formatter to its header. </dd></dl>

<p class="definition">Definition at line <a class="el" href="typed__linear__algebra_8hpp_source.xhtml#l00283">283</a> of file <a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad60373a22952f78108372e0bdc6d6d29" name="ad60373a22952f78108372e0bdc6d6d29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad60373a22952f78108372e0bdc6d6d29">&#9670;&#160;</a></span>format() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; OutputIterator </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="typed__linear__algebra_8hpp_source.xhtml#l00291">291</a> of file <a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  293</span>                        {</div>
<div class="line"><span class="lineno">  294</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">  295</span> </div>
<div class="line"><span class="lineno">  296</span>    <span class="keywordflow">for</span> (std::size_t i{0}; i &lt; fcarouge::tla::size&lt;RowIndexes&gt;; ++i) {</div>
<div class="line"><span class="lineno">  297</span>      <span class="keywordflow">if</span> (i &gt; 0) {</div>
<div class="line"><span class="lineno">  298</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">  299</span>      }</div>
<div class="line"><span class="lineno">  300</span> </div>
<div class="line"><span class="lineno">  301</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">  302</span> </div>
<div class="line"><span class="lineno">  303</span>      <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::tla::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><span class="lineno">  304</span>        <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><span class="lineno">  305</span>          format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">  306</span>        }</div>
<div class="line"><span class="lineno">  307</span> </div>
<div class="line"><span class="lineno">  308</span>        format_context.advance_to(</div>
<div class="line"><span class="lineno">  309</span>            std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.<a class="code hl_variable" href="structfcarouge_1_1typed__matrix.xhtml#aa5db2a2356369dbf5807f3760aa04d4d">data</a>(i, j)));</div>
<div class="line"><span class="lineno">  310</span>      }</div>
<div class="line"><span class="lineno">  311</span> </div>
<div class="line"><span class="lineno">  312</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">  313</span>    }</div>
<div class="line"><span class="lineno">  314</span> </div>
<div class="line"><span class="lineno">  315</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">  316</span> </div>
<div class="line"><span class="lineno">  317</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  318</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1typed__matrix_xhtml_aa5db2a2356369dbf5807f3760aa04d4d"><div class="ttname"><a href="structfcarouge_1_1typed__matrix.xhtml#aa5db2a2356369dbf5807f3760aa04d4d">fcarouge::typed_matrix::data</a></div><div class="ttdeci">Matrix data</div><div class="ttdef"><b>Definition</b> <a href="typed__linear__algebra_8hpp_source.xhtml#l00100">typed_linear_algebra.hpp:100</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7579a19d01fe8fb08fde89bfb36b3b74" name="a7579a19d01fe8fb08fde89bfb36b3b74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7579a19d01fe8fb08fde89bfb36b3b74">&#9670;&#160;</a></span>format() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; <br />
requires fcarouge::tla::row&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; OutputIterator
    </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="typed__linear__algebra_8hpp_source.xhtml#l00322">322</a> of file <a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  327</span>  {</div>
<div class="line"><span class="lineno">  328</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><span class="lineno">  329</span> </div>
<div class="line"><span class="lineno">  330</span>    <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::tla::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><span class="lineno">  331</span>      <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><span class="lineno">  332</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><span class="lineno">  333</span>      }</div>
<div class="line"><span class="lineno">  334</span> </div>
<div class="line"><span class="lineno">  335</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">  336</span>          std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.<a class="code hl_variable" href="structfcarouge_1_1typed__matrix.xhtml#aa5db2a2356369dbf5807f3760aa04d4d">data</a>(0, j)));</div>
<div class="line"><span class="lineno">  337</span>    }</div>
<div class="line"><span class="lineno">  338</span> </div>
<div class="line"><span class="lineno">  339</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><span class="lineno">  340</span> </div>
<div class="line"><span class="lineno">  341</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  342</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="adea9782ebc9bcc7fc8498aa1b5d7aa37" name="adea9782ebc9bcc7fc8498aa1b5d7aa37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adea9782ebc9bcc7fc8498aa1b5d7aa37">&#9670;&#160;</a></span>format() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; <br />
requires fcarouge::tla::singleton&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>format_context</em></span>&#160;) const -&gt; OutputIterator
    </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="typed__linear__algebra_8hpp_source.xhtml#l00346">346</a> of file <a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  351</span>  {</div>
<div class="line"><span class="lineno">  352</span>    format_context.advance_to(</div>
<div class="line"><span class="lineno">  353</span>        std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.<a class="code hl_variable" href="structfcarouge_1_1typed__matrix.xhtml#aa5db2a2356369dbf5807f3760aa04d4d">data</a>(0, 0)));</div>
<div class="line"><span class="lineno">  354</span> </div>
<div class="line"><span class="lineno">  355</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  356</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a899134801f37e61bc8021dde81611963" name="a899134801f37e61bc8021dde81611963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a899134801f37e61bc8021dde81611963">&#9670;&#160;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes , typename Char &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="structfcarouge_1_1typed__matrix.xhtml">fcarouge::typed_matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::parse </td>
          <td>(</td>
          <td class="paramtype">std::basic_format_parse_context&lt; Char &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>parse_context</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="typed__linear__algebra_8hpp_source.xhtml#l00285">285</a> of file <a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  285</span>                                                                           {</div>
<div class="line"><span class="lineno">  286</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><span class="lineno">  287</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/include/fcarouge/<a class="el" href="typed__linear__algebra_8hpp_source.xhtml">typed_linear_algebra.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>std</b></li><li class="navelem"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1typed__matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_00_01_char_01_4.xhtml">formatter&lt; fcarouge::typed_matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
