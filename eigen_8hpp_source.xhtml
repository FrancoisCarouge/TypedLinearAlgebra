<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Typed Linear Algebra: /github/workspace/support/eigen/fcarouge/eigen.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Typed Linear Algebra<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Typed Linear Algebra</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('eigen_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">eigen.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="eigen_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/* Typed Linear Algebra</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">https://github.com/FrancoisCarouge/TypedLinearAlgebra</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"></span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"></span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment"></span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">means.</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment"></span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment"></span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#ifndef FCAROUGE_EIGEN_HPP</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="preprocessor">#define FCAROUGE_EIGEN_HPP</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &quot;<a class="code" href="typed__linear__algebra_8hpp.xhtml">fcarouge/typed_linear_algebra.hpp</a>&quot;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#include &lt;format&gt;</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &lt;Eigen/Eigen&gt;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="foldopen" id="foldopen00049" data-start="{" data-end="}">
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen.xhtml">   49</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1eigen.xhtml">fcarouge::eigen</a> {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1eigen_1_1is__eigen.xhtml">   55</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1eigen_1_1is__eigen.xhtml">is_eigen</a> = <span class="keyword">requires</span> { <span class="keyword">typename</span> Type::PlainMatrix; };</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Row = 1, auto Column = 1&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">   70</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">matrix</a> = Eigen::Matrix&lt;Type, Row, Column&gt;;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Column = 1&gt;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen.xhtml#adec4afd23d0a51e3f79d35c0bdd5f39b">   74</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#adec4afd23d0a51e3f79d35c0bdd5f39b">row_vector</a> = Eigen::RowVector&lt;Type, Column&gt;;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Row = 1&gt;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen.xhtml#a3aae575a4aa6b608a99d02f58b0fc86c">   78</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a3aae575a4aa6b608a99d02f58b0fc86c">column_vector</a> = Eigen::Vector&lt;Type, Row&gt;;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>} <span class="comment">// namespace fcarouge::eigen</span></div>
</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="foldopen" id="foldopen00084" data-start="{" data-end="}">
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="namespace_eigen.xhtml">   84</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespace_eigen.xhtml">Eigen</a> {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1eigen_1_1is__eigen.xhtml">fcarouge::eigen::is_eigen</a> Numerator,</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>          <a class="code hl_concept" href="conceptfcarouge_1_1eigen_1_1is__eigen.xhtml">fcarouge::eigen::is_eigen</a> Denominator&gt;</div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="namespace_eigen.xhtml#a055f2c87b739a645dfb6edba76d1379e">   93</a></span><span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespace_eigen.xhtml#a055f2c87b739a645dfb6edba76d1379e">operator/</a>(<span class="keyword">const</span> Numerator &amp;lhs, <span class="keyword">const</span> Denominator &amp;rhs)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    -&gt; <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix</a>&lt;<span class="keyword">typename</span> Denominator::Scalar,</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>                               Numerator::RowsAtCompileTime,</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>                               Denominator::RowsAtCompileTime&gt; {</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordflow">return</span> rhs.transpose()</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>      .fullPivHouseholderQr()</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      .solve(lhs.transpose())</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>      .transpose();</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>}</div>
</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>} <span class="comment">// namespace Eigen</span></div>
</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column, <span class="keyword">typename</span> Char&gt;</div>
<div class="foldopen" id="foldopen00106" data-start="{" data-end="};">
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml">  106</a></span><span class="keyword">struct </span>std::formatter&lt;<a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a>::eigen::matrix&lt;Type, Row, Column&gt;, Char&gt; {</div>
<div class="foldopen" id="foldopen00107" data-start="{" data-end="}">
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a1fbc2686d5a57a9d5195a959e9e5526f">  107</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a1fbc2686d5a57a9d5195a959e9e5526f">parse</a>(std::basic_format_parse_context&lt;Char&gt; &amp;parse_context) {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  }</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00113" data-start="{" data-end="}">
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a3d907007057003a19346b1a60d7a0cfb">  113</a></span>  <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a3d907007057003a19346b1a60d7a0cfb">format</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;</a> &amp;value,</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>         std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>      -&gt; OutputIterator {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keyword">const</span> Eigen::IOFormat output_format{Eigen::StreamPrecision,</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>                                        Eigen::DontAlignCols,</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>                                        <span class="stringliteral">&quot;[&quot;</span>,</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>                                        <span class="stringliteral">&quot;]&quot;</span>,</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>                                        <span class="charliteral">&#39; &#39;</span>};</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keywordflow">return</span> std::format_to(</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>        format_context.out(), <span class="stringliteral">&quot;[{}]&quot;</span>,</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>        (std::stringstream{} &lt;&lt; value.format(output_format)).str());</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  }</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="}">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#ad8f463206d7871eef9caa4fed6e30695">  133</a></span>  <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#ad8f463206d7871eef9caa4fed6e30695">format</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;</a> &amp;value,</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>         std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    <span class="keyword">requires</span>(<a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;::RowsAtCompileTime</a> ==</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>                 1 &amp;&amp;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>             <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;::ColsAtCompileTime</a> != 1)</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keyword">const</span> Eigen::IOFormat output_format{Eigen::StreamPrecision,</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>                                        Eigen::DontAlignCols,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                                        <span class="stringliteral">&quot;[&quot;</span>,</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>                                        <span class="stringliteral">&quot;]&quot;</span>,</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>                                        <span class="charliteral">&#39; &#39;</span>};</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    <span class="keywordflow">return</span> std::format_to(</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>,</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>        (std::stringstream{} &lt;&lt; value.format(output_format)).str());</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  }</div>
</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00157" data-start="{" data-end="}">
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a08a4e63e9576800f03f72c8fe7b036a1">  157</a></span>  <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a08a4e63e9576800f03f72c8fe7b036a1">format</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;</a> &amp;value,</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>         std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    <span class="keyword">requires</span>(<a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;::RowsAtCompileTime</a> ==</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>                 1 &amp;&amp;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>             <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix&lt;Type, Row, Column&gt;::ColsAtCompileTime</a> == 1)</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  {</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    <span class="keywordflow">return</span> std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.value());</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  }</div>
</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>};</div>
</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_EIGEN_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1eigen_1_1is__eigen_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1eigen_1_1is__eigen.xhtml">fcarouge::eigen::is_eigen</a></div><div class="ttdoc">An Eigen3 algebraic concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00055">eigen.hpp:55</a></div></div>
<div class="ttc" id="anamespace_eigen_xhtml"><div class="ttname"><a href="namespace_eigen.xhtml">Eigen</a></div><div class="ttdef"><b>Definition</b> <a href="#l00084">eigen.hpp:84</a></div></div>
<div class="ttc" id="anamespace_eigen_xhtml_a055f2c87b739a645dfb6edba76d1379e"><div class="ttname"><a href="namespace_eigen.xhtml#a055f2c87b739a645dfb6edba76d1379e">Eigen::operator/</a></div><div class="ttdeci">constexpr auto operator/(const Numerator &amp;lhs, const Denominator &amp;rhs) -&gt; fcarouge::eigen::matrix&lt; typename Denominator::Scalar, Numerator::RowsAtCompileTime, Denominator::RowsAtCompileTime &gt;</div><div class="ttdoc">Eigen matrix solution to division.</div><div class="ttdef"><b>Definition</b> <a href="#l00093">eigen.hpp:93</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml">fcarouge::eigen</a></div><div class="ttdef"><b>Definition</b> <a href="#l00049">eigen.hpp:49</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a01e78c3f356b744543b2f25797bcfa84"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix</a></div><div class="ttdeci">Eigen::Matrix&lt; Type, Row, Column &gt; matrix</div><div class="ttdoc">Compile-time sized Eigen3 matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00070">eigen.hpp:70</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a3aae575a4aa6b608a99d02f58b0fc86c"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a3aae575a4aa6b608a99d02f58b0fc86c">fcarouge::eigen::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition</b> <a href="#l00078">eigen.hpp:78</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_adec4afd23d0a51e3f79d35c0bdd5f39b"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#adec4afd23d0a51e3f79d35c0bdd5f39b">fcarouge::eigen::row_vector</a></div><div class="ttdeci">Eigen::RowVector&lt; Type, Column &gt; row_vector</div><div class="ttdoc">Compile-time sized Eigen3 row vector.</div><div class="ttdef"><b>Definition</b> <a href="#l00074">eigen.hpp:74</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4_xhtml_a08a4e63e9576800f03f72c8fe7b036a1"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a08a4e63e9576800f03f72c8fe7b036a1">std::formatter&lt; fcarouge::eigen::matrix&lt; Type, Row, Column &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::eigen::matrix&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(fcarouge::eigen::matrix&lt; Type, Row, Column &gt;::RowsAtCompileTime==1 &amp;&amp;fcarouge::eigen::matrix&lt; Type, Row, Column &gt;::ColsAtCompileTime==1)</div><div class="ttdef"><b>Definition</b> <a href="#l00157">eigen.hpp:157</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4_xhtml_a1fbc2686d5a57a9d5195a959e9e5526f"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a1fbc2686d5a57a9d5195a959e9e5526f">std::formatter&lt; fcarouge::eigen::matrix&lt; Type, Row, Column &gt;, Char &gt;::parse</a></div><div class="ttdeci">constexpr auto parse(std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</div><div class="ttdef"><b>Definition</b> <a href="#l00107">eigen.hpp:107</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4_xhtml_a3d907007057003a19346b1a60d7a0cfb"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a3d907007057003a19346b1a60d7a0cfb">std::formatter&lt; fcarouge::eigen::matrix&lt; Type, Row, Column &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::eigen::matrix&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</div><div class="ttdef"><b>Definition</b> <a href="#l00113">eigen.hpp:113</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4_xhtml_ad8f463206d7871eef9caa4fed6e30695"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1eigen_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#ad8f463206d7871eef9caa4fed6e30695">std::formatter&lt; fcarouge::eigen::matrix&lt; Type, Row, Column &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::eigen::matrix&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(fcarouge::eigen::matrix&lt; Type, Row, Column &gt;::RowsAtCompileTime==1 &amp;&amp;fcarouge::eigen::matrix&lt; Type, Row, Column &gt;::ColsAtCompileTime !=1)</div><div class="ttdef"><b>Definition</b> <a href="#l00133">eigen.hpp:133</a></div></div>
<div class="ttc" id="atyped__linear__algebra_8hpp_xhtml"><div class="ttname"><a href="typed__linear__algebra_8hpp.xhtml">typed_linear_algebra.hpp</a></div><div class="ttdoc">Typed linear algebra implementation.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5815af820a9cc9481f1d0990a0d60286.xhtml">support</a></li><li class="navelem"><a class="el" href="dir_b2f5a9b0c45dbeb1baf4e9d55733efbc.xhtml">eigen</a></li><li class="navelem"><a class="el" href="dir_7e92a10fa1b0fca219294b16abd4710c.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="eigen_8hpp.xhtml">eigen.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
