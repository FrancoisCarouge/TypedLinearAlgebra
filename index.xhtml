<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Typed Linear Algebra: Typed Linear Algebra</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Typed Linear Algebra<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Typed Linear Algebra</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('index.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Typed Linear Algebra </div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p><a class="anchor" id="md__2github_2workspace_2_r_e_a_d_m_e"></a></p>
<p>This library provides a C++ strongly-typed facade to a matrix linear algebra backend.</p>
<h1><a class="anchor" id="examples"></a>
Examples</h1>
<div class="fragment"><div class="line">state x{3. * m,</div>
<div class="line">        2. * m / s,</div>
<div class="line">        1. * m / s2};</div>
<div class="line"> </div>
<div class="line">std::println(<span class="stringliteral">&quot;{}&quot;</span>, x * transpose(x));</div>
<div class="line"> </div>
<div class="line"><span class="comment">// [[9 m²,    6 m²/s,  3 m²/s²],</span></div>
<div class="line"><span class="comment">//  [6 m²/s,  4 m²/s², 2 m²/s³],</span></div>
<div class="line"><span class="comment">//  [3 m²/s², 2 m²/s³, 1 m²/s⁴]]</span></div>
</div><!-- fragment --><h1><a class="anchor" id="installation-1"></a>
Installation</h1>
<p>Example of installation commands in Shell:</p>
<div class="fragment"><div class="line">git clone --depth 1 &quot;https://github.com/FrancoisCarouge/TypedLinearAlgebra&quot;</div>
<div class="line">cmake -S &quot;TypedLinearAlgebra&quot; -B &quot;build&quot;</div>
<div class="line">cmake --build &quot;build&quot; --parallel</div>
<div class="line">sudo cmake --install &quot;build&quot;</div>
</div><!-- fragment --><p>Another variation for your CMake infrastructure via fetch content:</p>
<div class="fragment"><div class="line">include(FetchContent)</div>
<div class="line"> </div>
<div class="line">FetchContent_Declare(</div>
<div class="line">  fcarouge-typed-linear-algebra</div>
<div class="line">  GIT_REPOSITORY &quot;https://github.com/FrancoisCarouge/TypedLinearAlgebra&quot;</div>
<div class="line">  FIND_PACKAGE_ARGS NAMES fcarouge-typed-linear-algebra)</div>
<div class="line">FetchContent_MakeAvailable(fcarouge-typed-linear-algebra)</div>
<div class="line"> </div>
<div class="line">target_link_libraries(your_target PRIVATE fcarouge-typed-linear-algebra::linalg)</div>
</div><!-- fragment --><p><a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/tree/master/INSTALL.md">For more, see installation instructions</a>.</p>
<h1><a class="anchor" id="reference"></a>
Reference</h1>
<h2><a class="anchor" id="class-typed-matrix"></a>
Class Typed Matrix</h2>
<p>Strongly typed matrix. Compose a linear algebra backend matrix into a typed matrix. Row and column indexes provide each element's index type.</p>
<p>Also documented in the <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/blob/master/include/fcarouge/typed_linear_algebra.hpp">fcarouge/typed_linear_algebra.hpp</a> header.</p>
<h3><a class="anchor" id="declaration"></a>
Declaration</h3>
<div class="fragment"><div class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><span class="keyword">class </span>typed_matrix</div>
</div><!-- fragment --><h3><a class="anchor" id="template-parameters"></a>
Template Parameters</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Template Parameter   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>Matrix</code>   </td><td class="markdownTableBodyNone">The underlying linear algebra matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>RowIndexes</code>   </td><td class="markdownTableBodyNone">The tuple type of the row indexes.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>ColumnIndexes</code>   </td><td class="markdownTableBodyNone">The tuple type of the row indexes.   </td></tr>
</table>
<h3><a class="anchor" id="member-types"></a>
Member Types</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Member Type   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>underlying</code>   </td><td class="markdownTableBodyNone">The type of the element's underlying storage.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>row_indexes</code>   </td><td class="markdownTableBodyNone">The tuple with the row components of the indexes.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>column_indexes</code>   </td><td class="markdownTableBodyNone">The tuple with the column components of the indexes.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>element&lt;i, j&gt;</code>   </td><td class="markdownTableBodyNone">The type of the element at the given matrix indexes position.   </td></tr>
</table>
<h3><a class="anchor" id="member-functions"></a>
Member Functions</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Member Function   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(default constructor)</code>   </td><td class="markdownTableBodyNone">Construct a default typed matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(default copy constructor)</code>   </td><td class="markdownTableBodyNone">Copy construct the typed matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(default copy assignment operator)</code>   </td><td class="markdownTableBodyNone">Copy assign a typed matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(default move constructor)</code>   </td><td class="markdownTableBodyNone">Move construct a typed matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(default move assignment operator)</code>   </td><td class="markdownTableBodyNone">Move construct a typed matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(conversion copy constructor)</code>   </td><td class="markdownTableBodyNone">Copy construct the typed matrix from another typed matrix with a compatible underlying matrix or from a compatible underlying matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(conversion copy constructor)</code>   </td><td class="markdownTableBodyNone">Copy construct the typed column-vector from a parameter pack or C-style array.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(conversion copy constructor)</code>   </td><td class="markdownTableBodyNone">Copy construct the typed row-vector from a parameter pack or C-style array.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(conversion copy constructor)</code>   </td><td class="markdownTableBodyNone">Copy construct the typed singletin matrix from the sole element.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>operator[i, j]</code>   </td><td class="markdownTableBodyNone">Access the specified element.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>operator(i, j)</code>   </td><td class="markdownTableBodyNone">Access the specified element.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>at&lt;i, j&gt;()</code>   </td><td class="markdownTableBodyNone">Access the specified element.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(conversion operator)</code>   </td><td class="markdownTableBodyNone">Access the singleton element.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(destructor)</code>   </td><td class="markdownTableBodyNone">Destruct a default typed matrix.   </td></tr>
</table>
<h2><a class="anchor" id="structure-element-caster"></a>
Structure Element Caster</h2>
<p>Typed matrix element conversions customization point. Specialize this template to allow conversion of element's type and underlying type.</p>
<div class="fragment"><div class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> To, <span class="keyword">typename</span> From&gt; <span class="keyword">struct </span>element_caster</div>
</div><!-- fragment --><h2><a class="anchor" id="aliases"></a>
Aliases</h2>
<div class="fragment"><div class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... ColumnIndexes&gt;</div>
<div class="line">typed_row_vector;</div>
<div class="line"> </div>
<div class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... RowIndexes&gt;</div>
<div class="line">typed_column_vector;</div>
</div><!-- fragment --><h2><a class="anchor" id="format"></a>
Format</h2>
<p>A specialization of the standard formatter is provided for the typed matrix. Use <code>std::format</code> to store a formatted representation of the matrix. Standard format parameters to be supported.</p>
<h1><a class="anchor" id="considerations"></a>
Considerations</h1>
<h2><a class="anchor" id="lessons-learned"></a>
Lessons Learned</h2>
<p>Type safety cannot be guaranteed at compilation time without index safety. The indexes can either be non-type template parameters or strong types overloadings. Converting a runtime index to a dependent template type is not possible in C++. A proxy reference could be used to allow traditional assignment syntax but the runtime check and extra indirection are not interesting tradeoffs. A template call operator can be used for getting a type safe value but impractical syntax for setting. Without index safety, the accepted tradeoff is a templated index <code>at&lt;i, j&gt;()</code> method.</p>
<h1><a class="anchor" id="performance"></a>
Performance</h1>
<h2><a class="anchor" id="projects"></a>
Projects</h2>
<p>The library is used in projects:</p>
<ul>
<li><a href="https://github.com/FrancoisCarouge/Kalman">Kalman</a>: A Kalman filter library.</li>
</ul>
<p><em>Your project link here!</em></p>
<h1><a class="anchor" id="resources"></a>
Resources</h1>
<h2><a class="anchor" id="third-party-acknowledgement"></a>
Third Party Acknowledgement</h2>
<p>The library is designed, developed, and tested with the help of third-party tools and services acknowledged and thanked here:</p>
<ul>
<li><a href="https://github.com/peaceiris/actions-gh-pages">actions-gh-pages</a> to upload the documentation to GitHub pages.</li>
<li><a href="https://clang.llvm.org">Clang</a> for compilation and code sanitizers.</li>
<li><a href="https://cmake.org">CMake</a> for build automation.</li>
<li><a href="https://pypi.org/project/cmakelang">cmakelang</a> for pretty CMake list files.</li>
<li><a href="https://cppcheck.sourceforge.io">cppcheck</a> for static analysis.</li>
<li><a href="https://doxygen.nl">Doxygen</a> for documentation generation.</li>
<li><a href="https://github.com/jothepro/doxygen-awesome-css">Doxygen Awesome</a> for pretty documentation.</li>
<li><a href="https://eigen.tuxfamily.org/">Eigen</a> for linear algebra.</li>
<li><a href="https://gcc.gnu.org">GCC</a> for compilation and code sanitizers.</li>
<li><a href="http://ltp.sourceforge.net/coverage/lcov.php">lcov</a> to process coverage information.</li>
<li><a href="https://github.com/mpusz/mp-units">mp-units</a> the quantities and units library for C++.</li>
<li><a href="https://docs.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist">MSVC</a> for compilation and code sanitizers.</li>
<li><a href="https://valgrind.org">Valgrind</a> to check for correct memory management.</li>
</ul>
<h2><a class="anchor" id="sponsors"></a>
Sponsors</h2>
<p>Become a sponsor today! Support this project with coffee and infrastructure!</p>
<p><a href="http://paypal.me/francoiscarouge"><img src="https://img.shields.io/badge/Support-Sponsor-brightgreen" alt="Sponsor" class="inline"/></a></p>
<h3><a class="anchor" id="corporations--institutions"></a>
Corporations &amp; Institutions</h3>
<p><em>Your group logo and link here!</em></p>
<h3><a class="anchor" id="individuals"></a>
Individuals</h3>
<p><em>Your name and link here!</em></p>
<p>Thanks everyone!</p>
<h1><a class="anchor" id="continuous-integration--deployment-actions"></a>
Continuous Integration &amp; Deployment Actions</h1>
<p><a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra"><img src="https://img.shields.io/badge/Repository-GitHub%20%F0%9F%94%97-brightgreen" alt="Code Repository" class="inline"/></a> <br  />
 <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/pipeline.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/pipeline.yml/badge.svg" alt="Pipeline" style="pointer-events: none;" class="inline"/></a> <br  />
 <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/sanitizer.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/sanitizer.yml/badge.svg" alt="Sanitizer" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/format.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/format.yml/badge.svg" alt="Format" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/clang_tidy.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/clang_tidy.yml/badge.svg" alt="ClangTidy" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/cppcheck.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/cppcheck.yml/badge.svg" alt="CppCheck" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/doxygen.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/doxygen.yml/badge.svg" alt="Doxygen" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/memory_valgrind.yml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/memory_valgrind.yml/badge.svg" alt="Valgrind" style="pointer-events: none;" class="inline"/></a> <br  />
 <br  />
 <a href="https://raw.githubusercontent.com/francoiscarouge/TypedLinearAlgebra/master/LICENSE.txt"><img src="https://img.shields.io/badge/License-Public%20Domain%20%F0%9F%94%97-brightgreen" alt="Public Domain" class="inline"/></a> <br  />
 <a href="https://app.fossa.com/projects/git%2Bgithub.com%2FFrancoisCarouge%2FTypedLinearAlgebra?ref=badge_shield"><img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FFrancoisCarouge%2FTypedLinearAlgebra.svg?type=shield" alt="License Scan" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://www.bestpractices.dev/projects/8933"><img src="https://www.bestpractices.dev/projects/8933/badge" alt="OpenSSF Best Practices" class="inline"/></a> <br  />
 <br  />
 <a href="https://francoiscarouge.github.io/TypedLinearAlgebra/unit_test_coverage.xhtml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/deploy_coverage.yml/badge.svg" alt="Deploy Unit Test Code Coverage" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://francoiscarouge.github.io/TypedLinearAlgebra/index.xhtml"><img src="https://github.com/FrancoisCarouge/TypedLinearAlgebra/actions/workflows/deploy_doxygen.yml/badge.svg" alt="Deploy Doxygen" style="pointer-events: none;" class="inline"/></a> <br  />
 <br  />
 <a href="http://paypal.me/francoiscarouge"><img src="https://img.shields.io/badge/Support-Sponsor%20%F0%9F%94%97-brightgreen" alt="Sponsor" class="inline"/></a></p>
<h1><a class="anchor" id="license"></a>
License</h1>
<p><img src="http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png" alt="" align="right" class="inline"/></p>
<p>TypedLinearAlgebra is public domain:</p>
<p>This is free and unencumbered software released into the public domain.</p>
<p>Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.</p>
<p>In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.</p>
<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
<p>For more information, please refer to <a href="https://unlicense.org">https://unlicense.org</a> </p>
</div></div><!-- PageDoc -->
<a href="doxygen_crawl.xhtml"></a>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
