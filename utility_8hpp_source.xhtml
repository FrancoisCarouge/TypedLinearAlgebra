<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Typed Linear Algebra: /github/workspace/include/fcarouge/utility.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Typed Linear Algebra<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Typed Linear Algebra</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('utility_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">utility.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="utility_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/* Typed Linear Algebra</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">https://github.com/FrancoisCarouge/TypedLinearAlgebra</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"></span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"></span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment"></span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">means.</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment"></span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment"></span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#ifndef FCAROUGE_UTILITY_HPP</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="preprocessor">#define FCAROUGE_UTILITY_HPP</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2utility_8hpp.xhtml">internal/utility.hpp</a>&quot;</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1arithmetic.xhtml">   53</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> = internal::arithmetic&lt;Type&gt;;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1algebraic.xhtml">   59</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1algebraic.xhtml">algebraic</a> = internal::algebraic&lt;Type&gt;;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__input.xhtml">   66</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__input.xhtml">has_input</a> = internal::has_input&lt;Filter&gt;;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__process__uncertainty.xhtml">   73</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__process__uncertainty.xhtml">has_process_uncertainty</a> = internal::has_process_uncertainty&lt;Filter&gt;;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__output__uncertainty.xhtml">   80</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__output__uncertainty.xhtml">has_output_uncertainty</a> = internal::has_output_uncertainty&lt;Filter&gt;;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__prediction__types.xhtml">   88</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__prediction__types.xhtml">has_prediction_types</a> = internal::has_prediction_types&lt;Filter&gt;;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__input__control.xhtml">   95</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__input__control.xhtml">has_input_control</a> = internal::has_input_control&lt;Filter&gt;;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__state__transition.xhtml">  102</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__state__transition.xhtml">has_state_transition</a> = internal::has_state_transition&lt;Filter&gt;;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__update__types.xhtml">  109</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__update__types.xhtml">has_update_types</a> = internal::has_update_types&lt;Filter&gt;;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__output__model.xhtml">  116</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__output__model.xhtml">has_output_model</a> = internal::has_output_model&lt;Filter&gt;;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="};">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divides.xhtml">  133</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1divides.xhtml">divides</a> {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">  135</a></span>  <a class="code hl_function" href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs / rhs);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>};</div>
</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">  140</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">quotient</a> =</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    std::invoke_result_t&lt;divides&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="};">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluates.xhtml">  145</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1evaluates.xhtml">evaluates</a> {</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">  146</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">operator()</a>() const -&gt; Type;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>};</div>
</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">  150</a></span>template &lt;typename Type&gt; using <a class="code hl_typedef" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">evaluate</a> = std::invoke_result_t&lt;<a class="code hl_struct" href="structfcarouge_1_1evaluates.xhtml">evaluates</a>&lt;Type&gt;&gt;;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00153" data-start="{" data-end="};">
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes.xhtml">  153</a></span>template &lt;typename Type&gt; struct <a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes</a> {</div>
<div class="foldopen" id="foldopen00154" data-start="{" data-end="}">
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">  154</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">operator()</a>(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  }</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>};</div>
</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keyword">requires</span> <span class="keyword">requires</span>(Type value) { value.transpose(); }</div>
<div class="foldopen" id="foldopen00161" data-start="{" data-end="};">
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml">  161</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes</a>&lt;Type&gt; {</div>
<div class="foldopen" id="foldopen00162" data-start="{" data-end="}">
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">  162</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">operator()</a>(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    <span class="keywordflow">return</span> value.transpose();</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  }</div>
</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>};</div>
</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">  169</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">transpose</a> = std::invoke_result_t&lt;transposes&lt;Type&gt;, <span class="keyword">const</span> Type &amp;&gt;;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="foldopen" id="foldopen00174" data-start="{" data-end="}">
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">  174</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">t</a>(<span class="keyword">const</span> Type &amp;value) {</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes&lt;Type&gt;</a>{}(value);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>}</div>
</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a463eb0fdde0b3d3ea64b5a16fa95b253">  181</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a463eb0fdde0b3d3ea64b5a16fa95b253">empty_tuple</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#aba5eb00c20ad829026fe88a48785307d">internal::empty_tuple</a>;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a88ffaddfc70067199a9f22246b9d7220">  186</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a88ffaddfc70067199a9f22246b9d7220">first</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a9b7b21596c593512e73cd0298ff05c47">internal::first</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a0c5e16e2c726f4a91a88f3563be340b7">  190</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a0c5e16e2c726f4a91a88f3563be340b7">tuple_n_type</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a2d608d28c8cff822a3dfaf1daeb0b15e">internal::tuple_n_type&lt;Type, Size&gt;</a>;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="foldopen" id="foldopen00193" data-start="{" data-end="};">
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno"><a class="line" href="structfcarouge_1_1multiplies.xhtml">  193</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1multiplies.xhtml">multiplies</a> {</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">  195</a></span>  <a class="code hl_function" href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs * rhs);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>};</div>
</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">  200</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">product</a> =</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    std::invoke_result_t&lt;multiplies&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="foldopen" id="foldopen00204" data-start="{" data-end="};">
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="structfcarouge_1_1minus.xhtml">  204</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1minus.xhtml">minus</a> {</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno"><a class="line" href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">  206</a></span>  <a class="code hl_function" href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs - rhs);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>};</div>
</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">  211</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">difference</a> =</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    std::invoke_result_t&lt;minus&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">  216</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">ᴀʙᵀ</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">evaluate&lt;product&lt;Lhs, evaluate&lt;transpose&lt;Rhs&gt;</a>&gt;&gt;&gt;;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span><span class="keyword">template</span> &lt;std::size_t Begin, std::size_t End, std::size_t Increment,</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>          <span class="keyword">typename</span> Function&gt;</div>
<div class="foldopen" id="foldopen00228" data-start="{" data-end="}">
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">  228</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">internal::for_constexpr&lt;Begin, End, Increment&gt;</a>(</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>      std::forward&lt;Function&gt;(function));</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>}</div>
</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">  242</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> std::size_t <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>{<a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#acc1fdb56d90746f239527e42262d81e1">internal::size&lt;Pack&gt;</a>};</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span>... Values&gt;</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">  246</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">first_v</a>{<a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a08c486af5cba5a0b71c8b2b8fd13a1d5">internal::first_v</a>&lt;Values...&gt;};</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00254" data-start="{" data-end="};">
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">  254</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">one</a>{internal::not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    <span class="stringliteral">&quot;Implement the linear algebra one-diagonal matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">  258</a></span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">one&lt;Arithmetic&gt;</a>{1};</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Identity(); }</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">  262</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">one&lt;Type&gt;</a>{Type::Identity()};</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::identity(); }</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">one&lt;Type&gt;</a>{Type::identity()};</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00272" data-start="{" data-end="};">
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">  272</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero</a>{internal::not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>    <span class="stringliteral">&quot;Implement the linear algebra zero matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">  277</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">zero&lt;Arithmetic&gt;</a>{0};</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Zero(); }</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">  281</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">zero&lt;Type&gt;</a>{Type::Zero()};</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::zero(); }</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">zero&lt;Type&gt;</a>{Type::zero()};</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_UTILITY_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1algebraic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1algebraic.xhtml">fcarouge::algebraic</a></div><div class="ttdoc">Algebraic concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00059">utility.hpp:59</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1arithmetic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a></div><div class="ttdoc">Arithmetic concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00053">utility.hpp:53</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__input__control_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__input__control.xhtml">fcarouge::has_input_control</a></div><div class="ttdoc">Filter input control support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00095">utility.hpp:95</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__input_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__input.xhtml">fcarouge::has_input</a></div><div class="ttdoc">Filter input support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00066">utility.hpp:66</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__output__model_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__output__model.xhtml">fcarouge::has_output_model</a></div><div class="ttdoc">Filter output model support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00116">utility.hpp:116</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__output__uncertainty_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__output__uncertainty.xhtml">fcarouge::has_output_uncertainty</a></div><div class="ttdoc">Filter output uncertainty support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00080">utility.hpp:80</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__prediction__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__prediction__types.xhtml">fcarouge::has_prediction_types</a></div><div class="ttdoc">Filter prediction pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00088">utility.hpp:88</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__process__uncertainty_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__process__uncertainty.xhtml">fcarouge::has_process_uncertainty</a></div><div class="ttdoc">Filter process uncertainty support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00073">utility.hpp:73</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__state__transition_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__state__transition.xhtml">fcarouge::has_state_transition</a></div><div class="ttdoc">Filter state transition support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00102">utility.hpp:102</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__update__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__update__types.xhtml">fcarouge::has_update_types</a></div><div class="ttdoc">Filter update pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00109">utility.hpp:109</a></div></div>
<div class="ttc" id="ainternal_2utility_8hpp_xhtml"><div class="ttname"><a href="internal_2utility_8hpp.xhtml">utility.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a08c486af5cba5a0b71c8b2b8fd13a1d5"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a08c486af5cba5a0b71c8b2b8fd13a1d5">fcarouge::internal::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00257">utility.hpp:257</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a2d608d28c8cff822a3dfaf1daeb0b15e"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a2d608d28c8cff822a3dfaf1daeb0b15e">fcarouge::internal::tuple_n_type</a></div><div class="ttdeci">typename tupler&lt; Type, Size &gt;::type tuple_n_type</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00273">utility.hpp:273</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4c0bbc15a41d76dd2b4b23d8566fba57"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00246">utility.hpp:246</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a9b7b21596c593512e73cd0298ff05c47"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a9b7b21596c593512e73cd0298ff05c47">fcarouge::internal::first</a></div><div class="ttdeci">std::tuple_element_t&lt; 0, std::tuple&lt; Types... &gt; &gt; first</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00242">utility.hpp:242</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_aba5eb00c20ad829026fe88a48785307d"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#aba5eb00c20ad829026fe88a48785307d">fcarouge::internal::empty_tuple</a></div><div class="ttdeci">std::tuple&lt;&gt; empty_tuple</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00237">utility.hpp:237</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_acc1fdb56d90746f239527e42262d81e1"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#acc1fdb56d90746f239527e42262d81e1">fcarouge::internal::size</a></div><div class="ttdeci">constexpr auto size</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00254">utility.hpp:254</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a06ed7a99de8c150ba47d98be11bf795d"><div class="ttname"><a href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">fcarouge::transpose</a></div><div class="ttdeci">std::invoke_result_t&lt; transposes&lt; Type &gt;, const Type &amp; &gt; transpose</div><div class="ttdoc">Transposer helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00169">utility.hpp:169</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a0c5e16e2c726f4a91a88f3563be340b7"><div class="ttname"><a href="namespacefcarouge.xhtml#a0c5e16e2c726f4a91a88f3563be340b7">fcarouge::tuple_n_type</a></div><div class="ttdeci">internal::tuple_n_type&lt; Type, Size &gt; tuple_n_type</div><div class="ttdoc">An alias for making a tuple of the same type.</div><div class="ttdef"><b>Definition</b> <a href="#l00190">utility.hpp:190</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a1e0d4e00e05e1ca7701aa8dfc9681d77"><div class="ttname"><a href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">fcarouge::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdoc">Unpack the first value of the non-type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00246">utility.hpp:246</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a26e349ac2062d99cb0962705f1f93657"><div class="ttname"><a href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">fcarouge::product</a></div><div class="ttdeci">std::invoke_result_t&lt; multiplies&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; product</div><div class="ttdoc">Helper type to deduce the result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="#l00200">utility.hpp:200</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a463eb0fdde0b3d3ea64b5a16fa95b253"><div class="ttname"><a href="namespacefcarouge.xhtml#a463eb0fdde0b3d3ea64b5a16fa95b253">fcarouge::empty_tuple</a></div><div class="ttdeci">internal::empty_tuple empty_tuple</div><div class="ttdoc">Type of the empty tuple.</div><div class="ttdef"><b>Definition</b> <a href="#l00181">utility.hpp:181</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5567c841761bdb7aac049796d4c43580"><div class="ttname"><a href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">fcarouge::zero&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic zero&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton zero matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00277">utility.hpp:277</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5ad0022b969a210b7261d0158bc1dd7b"><div class="ttname"><a href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">fcarouge::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="#l00228">utility.hpp:228</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5d1b555b919a51d9ef29849f6e86b48a"><div class="ttname"><a href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">fcarouge::t</a></div><div class="ttdeci">auto t(const Type &amp;value)</div><div class="ttdoc">Transpose helper function.</div><div class="ttdef"><b>Definition</b> <a href="#l00174">utility.hpp:174</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a773f87f2fdf94a96f0c048f85a1e5106"><div class="ttname"><a href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">fcarouge::one&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic one&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton one matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00258">utility.hpp:258</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a8887e952722c60720253e416166a9233"><div class="ttname"><a href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">fcarouge::one</a></div><div class="ttdeci">constexpr Type one</div><div class="ttdoc">The one matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00254">utility.hpp:254</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a88ffaddfc70067199a9f22246b9d7220"><div class="ttname"><a href="namespacefcarouge.xhtml#a88ffaddfc70067199a9f22246b9d7220">fcarouge::first</a></div><div class="ttdeci">internal::first&lt; Types... &gt; first</div><div class="ttdoc">Unpack the first type of the type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00186">utility.hpp:186</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a8dbf59cfc0dc0e18d5cee189c7f35d41"><div class="ttname"><a href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">fcarouge::difference</a></div><div class="ttdeci">std::invoke_result_t&lt; minus&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; difference</div><div class="ttdoc">Helper type to deduce the result type of the minus, subtraction.</div><div class="ttdef"><b>Definition</b> <a href="#l00211">utility.hpp:211</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a972eb30c6ed1a0e253d8539e87e15908"><div class="ttname"><a href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">fcarouge::evaluate</a></div><div class="ttdeci">std::invoke_result_t&lt; evaluates&lt; Type &gt; &gt; evaluate</div><div class="ttdoc">Evaluater helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00150">utility.hpp:150</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa0e360c3c4b209b1ab2141f8376c3bae"><div class="ttname"><a href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">fcarouge::quotient</a></div><div class="ttdeci">std::invoke_result_t&lt; divides&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; quotient</div><div class="ttdoc">Divider helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00140">utility.hpp:140</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac0283af94a195958399959586dcc8a50"><div class="ttname"><a href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">fcarouge::zero&lt; Type &gt;</a></div><div class="ttdeci">auto zero&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00281">utility.hpp:281</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac4cffefdda8c01a267ce2700c6acb903"><div class="ttname"><a href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="#l00242">utility.hpp:242</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aec3bfab0842e1f83b5f1493062848140"><div class="ttname"><a href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">fcarouge::ᴀʙᵀ</a></div><div class="ttdeci">evaluate&lt; product&lt; Lhs, evaluate&lt; transpose&lt; Rhs &gt; &gt; &gt; &gt; ᴀʙᵀ</div><div class="ttdoc">The evaluated type of the ABᵀ expression.</div><div class="ttdef"><b>Definition</b> <a href="#l00216">utility.hpp:216</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aef6fb6c8a265d85709b951506123a5f1"><div class="ttname"><a href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">fcarouge::zero</a></div><div class="ttdeci">constexpr Type zero</div><div class="ttdoc">The zero matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00272">utility.hpp:272</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_af1e24dabeb646745f490f0aa51f690b5"><div class="ttname"><a href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">fcarouge::one&lt; Type &gt;</a></div><div class="ttdeci">auto one&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00262">utility.hpp:262</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divides_xhtml"><div class="ttname"><a href="structfcarouge_1_1divides.xhtml">fcarouge::divides</a></div><div class="ttdoc">Linear algebra divides expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00133">utility.hpp:133</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divides_xhtml_a15b30f424893c658711a0bfb508cd5a3"><div class="ttname"><a href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">fcarouge::divides::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs/rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1evaluates_xhtml"><div class="ttname"><a href="structfcarouge_1_1evaluates.xhtml">fcarouge::evaluates</a></div><div class="ttdoc">Linear algebra evaluates override expression lazy evaluation specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00145">utility.hpp:145</a></div></div>
<div class="ttc" id="astructfcarouge_1_1evaluates_xhtml_a3fa7cfc44179cb3518a7c619ae4fbf1f"><div class="ttname"><a href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">fcarouge::evaluates::operator()</a></div><div class="ttdeci">constexpr auto operator()() const -&gt; Type</div></div>
<div class="ttc" id="astructfcarouge_1_1minus_xhtml"><div class="ttname"><a href="structfcarouge_1_1minus.xhtml">fcarouge::minus</a></div><div class="ttdoc">Type minus, subtraction expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00204">utility.hpp:204</a></div></div>
<div class="ttc" id="astructfcarouge_1_1minus_xhtml_a2ff71dc60b5f253f3099d77feda46d3c"><div class="ttname"><a href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">fcarouge::minus::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs - rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1multiplies_xhtml"><div class="ttname"><a href="structfcarouge_1_1multiplies.xhtml">fcarouge::multiplies</a></div><div class="ttdoc">Type multiplies expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00193">utility.hpp:193</a></div></div>
<div class="ttc" id="astructfcarouge_1_1multiplies_xhtml_aeb27bdc97d599628f4d0ea63b589544f"><div class="ttname"><a href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">fcarouge::multiplies::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs *rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_3_01_type_01_4_xhtml_aadadc9485a0edbf93585d2f5562a6e06"><div class="ttname"><a href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">fcarouge::transposes&lt; Type &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Type &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00162">utility.hpp:162</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_xhtml"><div class="ttname"><a href="structfcarouge_1_1transposes.xhtml">fcarouge::transposes</a></div><div class="ttdoc">Linear algebra transposes specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00153">utility.hpp:153</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_xhtml_aadadc9485a0edbf93585d2f5562a6e06"><div class="ttname"><a href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">fcarouge::transposes::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Type &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00154">utility.hpp:154</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="utility_8hpp.xhtml">utility.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
